[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
nnoremap [fugitive]    <Nop>
nmap     <Leader>g [fugitive]
nnoremap <silent> [fugitive]s :<C-U>Git<CR>
nnoremap <silent> [fugitive]d :<C-U>Gdiffsplit<CR>
nnoremap <silent> [fugitive]b :<C-U>Git blame<CR>
nnoremap <silent> [fugitive]c :<C-U>Git commit<CR>
'''

[[plugins]]
repo = 'sjl/gundo.vim'
hook_add = '''
let g:gundo_prefer_python3 = 1
nnoremap <silent> <Leader>h :<C-U>GundoToggle<CR>
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
let g:quickrun_config = {
\	'_' : {
\		'runner' : 'vimproc',
\		'runner/vimproc/updatetime' : 60,
\		'outputter/buffer/opener': '%{winwidth(0) * 2 < winheight(0) * 5 ? "" : "vertical"} rightbelow new',
\	},
\	'markdown' : {
\		'outputter' : 'browser',
\		'type': 'markdown/pandoc',
\		'cmdopt': '--mathml -c ~/.pandoc/github.css',
\	}
\}
nnoremap <silent> <Leader>r :QuickRun -mode n<CR>
vnoremap <silent> <Leader>r :QuickRun -mode v<CR>
'''

[[plugins]]
repo = 'rhysd/clever-f.vim'

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
function! s:on_lsp_buffer_enabled() abort
	setlocal omnifunc=lsp#complete
	setlocal signcolumn=yes
	if exists('+tagfunc') | setlocal tagfunc=lsp#tagfunc | endif
	nmap <buffer> gd <plug>(lsp-definition)
	nmap <buffer> gs <plug>(lsp-document-symbol-search)
	nmap <buffer> gS <plug>(lsp-workspace-symbol-search)
	nmap <buffer> gr <plug>(lsp-references)
	nmap <buffer> <f2> <plug>(lsp-rename)
	nmap <buffer> [g <plug>(lsp-previous-diagnostic)
	nmap <buffer> ]g <plug>(lsp-next-diagnostic)
	nmap <buffer> K <plug>(lsp-hover)
	nnoremap <buffer> <expr><c-f> lsp#scroll(+4)
	nnoremap <buffer> <expr><c-d> lsp#scroll(-4)

	noremap [vim-lsp] <Nop>
	map <buffer> <Leader>l [vim-lsp]
	nmap <buffer> [vim-lsp]d <plug>(lsp-peek-definition)
	nmap <buffer> [vim-lsp]r <plug>(lsp-rename)
	map  <buffer> [vim-lsp]f <plug>(lsp-document-format)
endfunction

augroup lsp_install
	au!
	" call s:on_lsp_buffer_enabled only for languages that has the server registered.
	autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
augroup END

let g:lsp_diagnostics_enabled = 1
let g:lsp_diagnostics_echo_cursor = 1
'''

[[plugins]]
repo = 'mattn/vim-lsp-settings'
